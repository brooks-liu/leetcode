Notes doc, for all things I find interesting/important about solutions and problems! ONLY FOR LEETCODE (probably)

Linked Lists:
    While using linked lists, you can often create one head and a current linked list, and instead of putting in a value into a list,
    you can just point your curr to the node of the already created list, and continue like that. At the end, you can return head.next to 
    get the actual start of the list (like problem 21 solution).
    
Binary Search:
    Implementation isn't hard just walk through an example specific to the case.

Cycle Sort:
    Sorts in place and takes up O(1) auxiliary space, just swap items in place

General:
    Go through simple examples!
    Don't get scared of time complexity, make a solution and improve on it.


Things to learn/review in the future:
    Space complexity stuff (auxiliary space?)
    All graph questions (but should be better at it when I'm making the game)
    
